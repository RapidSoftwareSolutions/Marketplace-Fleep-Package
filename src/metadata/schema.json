{
    "package": "Fleep",
    "tagline": "Fleep API",
    "description": "Founded by ex-Skypers, Fleep is a messenger for your teams and projects. We take email\u2019s ability to contact anyone and marry it with real-time messaging flow.",
    "image": "https:\/\/logo.clearbit.com\/fleep.io",
    "repo": "https://github.com/RapidSoftwareSolutions/Marketplace-Fleep-Package",
    "keywords": [
        "API",
        "Messenger",
        "Teams",
        "Messaging",
        "Contact"
    ],
    "accounts": {
        "domain": "fleep.io",
        "credentials": [
            "username",
            "password"
        ]
    },
    "steps": [
        "Register on the fleep.io",
        "Use username and password for getting access ticket and token id in loginAccount endpoint"
    ],
    "events": [
        {
            "name": "webhookEvent",
            "description": "This API allows you to create, edit, and delete conversation webhooks programmatically.",
            "payload": {
                "conversations": [
                    {
                        "mk_rec_type": "org_conv",
                        "is_disclose": null,
                        "account_id": "4130d707-f1c7-4307-9c0e-46602e04f78f",
                        "organisation_id": null,
                        "conversation_id": "67079a87-0d40-4d01-84b1-62b85eb5468b",
                        "start_time": "2017-10-06 12:32:35.081056+00",
                        "is_list": false,
                        "teams": [],
                        "topic": "",
                        "mk_conv_type": "cct_default",
                        "leavers": [],
                        "guests": [],
                        "members": [
                            "4130d707-f1c7-4307-9c0e-46602e04f78f",
                            "4871268f-0f76-41db-9e28-e9e28316ed76"
                        ],
                        "last_message_nr": 9,
                        "is_premium": false,
                        "is_autojoin": null,
                        "is_url_preview_disabled": null
                    }
                ],
                "reply_url": "https:\/\/fleep.io\/hook\/UzRyopyDRgmrCEZK97VGiw",
                "messages": [
                    {
                        "notification_id": null,
                        "reactions": null,
                        "edit_account_id": null,
                        "sender_name": null,
                        "revision_message_nr": null,
                        "profile_id": "4130d707-f1c7-4307-9c0e-46602e04f78f",
                        "file_ids": null,
                        "inbox_nr": 7,
                        "pin_weight": null,
                        "message": "{\"message\":\"<msg><p>Hello world!<\/p><\/msg>\",\"is_url_preview_disabled\":false}",
                        "is_edited_by_others": null,
                        "task_weight": null,
                        "on_behalf_id": null,
                        "mk_message_state": "urn:fleep:message:mk_message_state:plain",
                        "pinned_account_id": null,
                        "mk_rec_type": "message",
                        "is_new_sheet": null,
                        "account_id": "4130d707-f1c7-4307-9c0e-46602e04f78f",
                        "tags": [],
                        "lock_account_id": null,
                        "section_id": null,
                        "mk_message_type": "textV2",
                        "store_time": "2017-10-10 12:51:25.493039+00",
                        "posted_time": 1507639885,
                        "edited_time": null,
                        "conversation_id": "67079a87-0d40-4d01-84b1-62b85eb5468b",
                        "message_nr": 9,
                        "is_spam": null,
                        "flow_message_nr": null,
                        "mention_ids": null,
                        "mk_msg_sub_type": null,
                        "tasked_account_id": null,
                        "subject_hash": null,
                        "assignee_ids": null,
                        "hook_key": null,
                        "raw_id": null,
                        "ref_message_nr": null,
                        "prev_message_nr": 8
                    }
                ],
                "contacts": [
                    {
                        "mk_rec_type": "contact",
                        "display_name": "test",
                        "account_id": "4130d707-f1c7-4307-9c0e-46602e04f78f",
                        "organisation_id": null,
                        "mk_account_status": "active",
                        "is_hidden_for_add": null,
                        "phone_nr": null,
                        "avatar_urls": null,
                        "activity_time": 1507639822,
                        "fleep_address": "packages",
                        "email": "packages@rapidapi.com"
                    }
                ]
            },
            "steps": [
                "Navigate to createConversationHook block",
                "Set callback url in outgoingUrl field to __WEBHOOK_URL__"
            ],
            "args": [
                {
                    "name": "username",
                    "type": "String",
                    "info": "Your fleep username.",
                    "required": false
                }
            ]
        }
    ],
    "blocks": [
        {
            "name": "loginAccount",
            "description": "Handle user login business logic. If login is successful, it sets session token and returns account info.",
            "args": [
                {
                    "name": "email",
                    "type": "credentials",
                    "info": "User email.",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "credentials",
                    "info": "User password.",
                    "required": true
                },
                {
                    "name": "rememberMe",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether user wants long-term session cookie.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remember_me"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/login",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "remember_me",
                            "password",
                            "email"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "logoutAccount",
            "description": "Close session.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/logout",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createAccount",
            "description": "Create new account and send verification email.",
            "args": [
                {
                    "name": "email",
                    "type": "String",
                    "info": "User email.",
                    "required": true
                },
                {
                    "name": "password",
                    "type": "String",
                    "info": "Initial password to set.",
                    "required": true
                },
                {
                    "name": "displayName",
                    "type": "String",
                    "info": "Name to be displayed in conversations.",
                    "required": true,
                    "vendorSchema": {
                        "name": "display_name"
                    }
                },
                {
                    "name": "referer",
                    "type": "String",
                    "info": "Page that referred used to fleep.",
                    "required": false
                },
                {
                    "name": "useCode",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Use flow based on registration code.",
                    "required": true,
                    "vendorSchema": {
                        "name": "use_code"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/register",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "display_name",
                            "password",
                            "email",
                            "referer",
                            "use_code"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "repeatEmailCode",
            "description": "Trigger registration code email.",
            "args": [
                {
                    "name": "email",
                    "type": "String",
                    "info": "User email.",
                    "required": true
                },
                {
                    "name": "referer",
                    "type": "String",
                    "info": "Page that referred used to fleep.",
                    "required": false
                },
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/register\/v2",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "email",
                            "referer"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "sendResetPasswordLink",
            "description": "Request password reset email for active account. Password is not reset yet just email with rest token is sent out. User must click on link in email and then enter new passord to rest it.",
            "args": [
                {
                    "name": "email",
                    "type": "String",
                    "info": "User email.",
                    "required": true
                },
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/reset_password",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "email",
                            "referer"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addReminder",
            "description": "Informs backend that given reminder has been show to the user.",
            "args": [
                {
                    "name": "reminderId",
                    "type": "String",
                    "info": "Reminder id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "reminder_id"
                    }
                },
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/click_reminder",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "reminder_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getClassificators",
            "description": "Get list of classificators.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/classificators",
                "method": "get",
                "requestParameters": ["ticket","tokenId"]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editAccountSettings",
            "description": "Change account related settings.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "displayName",
                    "type": "String",
                    "info": "Name displayed instead of email in chats.",
                    "required": false,
                    "vendorSchema": {
                        "name": "display_name"
                    }
                },
                {
                    "name": "password",
                    "type": "String",
                    "info": "New password.",
                    "required": false,
                    "vendorSchema": {
                        "name": "password"
                    }
                },
                {
                    "name": "oldPassword",
                    "type": "String",
                    "info": "Required when submitting new password.",
                    "required": false,
                    "vendorSchema": {
                        "name": "old_password"
                    }
                },
                {
                    "name": "phoneNumber",
                    "type": "String",
                    "info": "User's phone number.",
                    "required": false,
                    "vendorSchema": {
                        "name": "phone_nr"
                    }
                },
                {
                    "name": "emailInterval",
                    "type": "String",
                    "info": "Email interval.",
                    "required": false,
                    "vendorSchema": {
                        "name": "email_interval"
                    }
                },
                {
                    "name": "isFullPrivacy",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Stop sending out reading writing activity.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_full_privacy"
                    }
                },
                {
                    "name": "isNewsletterDisabled",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Enable\/disable newsletter sending",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_newsletter_disabled"
                    }
                },
                {
                    "name": "isAutomuteEnabled",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Enable\/disable incoming email automute.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_automute_enabled"
                    }
                },
                {
                    "name": "clientSettings",
                    "type": "JSON",
                    "info": "Json encoded dict of changed client settings.",
                    "required": false,
                    "vendorSchema": {
                        "name": "client_settings"
                    }
                },
                {
                    "name": "primaryEmail",
                    "type": "String",
                    "info": "Set new primary email (it has to be confirmed as alias first).",
                    "required": false,
                    "vendorSchema": {
                        "name": "primary_email"
                    }
                },
                {
                    "name": "fleepAddress",
                    "type": "String",
                    "info": "Set fleep address (results in error if account already has one).",
                    "required": false,
                    "vendorSchema": {
                        "name": "fleep_address"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https://fleep.io/api/account/configure",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "display_name",
                            "old_password",
                            "password",
                            "phone_nr",
                            "email_interval",
                            "is_full_privacy",
                            "is_newsletter_disabled",
                            "is_automute_enabled",
                            "client_settings",
                            "primary_email",
                            "fleep_address"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "confirmAccount",
            "description": "Confirm receiving email with confirmation code and activate account.",
            "args": [
                {
                    "name": "notificationId",
                    "type": "String",
                    "info": "notification token",
                    "required": true,
                    "vendorSchema": {
                        "name": "notification_id"
                    }
                },
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/confirm",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "notification_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "confirmAndConfigureAccount",
            "description": "Confirm receiving email and configure account.",
            "args": [
                {
                    "name": "notificationId",
                    "type": "String",
                    "info": "notification token",
                    "required": true,
                    "vendorSchema": {
                        "name": "notification_id"
                    }
                },
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "displayName",
                    "type": "String",
                    "info": "Display name.",
                    "required": false,
                    "vendorSchema": {
                        "name": "display_name"
                    }
                },
                {
                    "name": "password",
                    "type": "String",
                    "info": "User password.",
                    "required": false,
                    "vendorSchema": {
                        "name": "password"
                    }
                },
                {
                    "name": "fleepAddress",
                    "type": "String",
                    "info": "Fleep address.",
                    "required": false,
                    "vendorSchema": {
                        "name": "fleep_address"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/export\/start",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "notification_id",
                            "fleep_address",
                            "password",
                            "display_name"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "exportConversationHistory",
            "description": "Export conversation history. User is notified when files are available for download.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "exportAction",
                    "type": "String",
                    "info": "What to export: history_all - conversation history, all file types.",
                    "required": false,
                    "vendorSchema": {
                        "name": "export_action"
                    }
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "If set, generate files for this conversation only,and return ConvInfo else return ContactInfo.",
                    "required": false,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/export\/start",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "conversation_id",
                            "export_action"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getExternalAccountInfo",
            "description": "Get External Account Info.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "mkExternalAccountType",
                    "type": "Select",
                    "options": [
                        "trello"
                    ],
                    "info": "Type of the connected external account.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_external_account_type"
                    }
                },
                {
                    "name": "mkPermissionType",
                    "type": "Select",
                    "options": [
                        "create_hook"
                    ],
                    "info": "Type of permissions that external account has granted to Fleep.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_permission_type"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/external\/account\/list",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "mk_external_account_type",
                            "mk_permission_type"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContactsRecordList",
            "description": "Lookup accounts.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "lookupList",
                    "type": "List",
                    "structure": {
                        "name": "lookupString",
                        "type": "String",
                        "info": "Single lookup string."
                    },
                    "info": "List of lookup strings.",
                    "required": true,
                    "vendorSchema": {
                        "name": "lookup_list"
                    }
                },
                {
                    "name": "ignoreList",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single accountId to ignore."
                    },
                    "info": "List of accountId's to ignore.",
                    "required": true,
                    "vendorSchema": {
                        "name": "ignore_list"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/lookup",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "ignore_list",
                            "lookup_list"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getNotificationIdForFurtherRequests",
            "description": "Get notificationId for further requests.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "notificationId",
                    "type": "String",
                    "info": "Notification id.",
                    "required": false,
                    "vendorSchema": {
                        "name": "notification_id"
                    }
                },
                {
                    "name": "registrationCode",
                    "type": "String",
                    "info": "Registration code.",
                    "required": true,
                    "vendorSchema": {
                        "name": "registration_code"
                    }
                },
                {
                    "name": "registrationMail",
                    "type": "String",
                    "info": "Registration mail.",
                    "required": true,
                    "vendorSchema": {
                        "name": "registration_mail"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/prepare\/v2",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "registration_mail",
                            "lookup_list",
                            "notification_id",
                            "registration_code"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setAccountFlag",
            "description": "Set flag for given account that may be used by clients to display or hide content etc.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "clientFlag",
                    "type": "String",
                    "info": "Name of the flag to set or clear.",
                    "required": true,
                    "vendorSchema": {
                        "name": "client_flag"
                    }
                },
                {
                    "name": "boolValue",
                    "type":"Select",
                    "options":["true","false"],
                    "info": "Clear given flag from account.",
                    "required": false,
                    "vendorSchema": {
                        "name": "bool_value"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/set_flag",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "bool_value",
                            "client_flag"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizehronizePinboard",
            "description": "Synchronize pinboard.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "pinWeight",
                    "type": "String",
                    "info": "Pin weight.",
                    "required": false,
                    "vendorSchema": {
                        "name": "pin_weight"
                    }
                },
                {
                    "name": "pinLimit",
                    "type": "Number",
                    "info": "Pin limit.",
                    "required": false,
                    "vendorSchema": {
                        "name": "pin_limit"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/sync_pinboard",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "conversation_id",
                            "pin_weight",
                            "pin_limit"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeTaskboard",
            "description": "Synchronize taskboard.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "sectionId",
                    "type": "String",
                    "info": "Section id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "section_id"
                    }
                },
                {
                    "name": "taskWeight",
                    "type": "String",
                    "info": "Task weight from cursor if provided.",
                    "required": false,
                    "vendorSchema": {
                        "name": "task_weight"
                    }
                },
                {
                    "name": "taskLimit",
                    "type": "Number",
                    "info": "Tasks to synchronize in one batch (between 1 and 100).",
                    "required": false,
                    "vendorSchema": {
                        "name": "task_limit"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/sync_taskboard",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "task_limit",
                            "conversation_id",
                            "task_weight",
                            "task_limit",
                            "section_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTrelloBoardList",
            "description": "Get Trello board list.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "externalAccountId",
                    "type": "String",
                    "info": "Id of the external account (see ExternalAccountInfo).",
                    "required": true,
                    "vendorSchema": {
                        "name": "external_account_id"
                    }
                },
                {
                    "name": "mkPermissionType",
                    "type": "Select",
                    "options": [
                        "create_hook"
                    ],
                    "info": "Type of permissions that external account has granted to Fleep.",
                    "required": true,
                    "vendorSchema": {
                        "name": "mk_permission_type"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/trello\/board\/list",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "external_account_id",
                            "mk_permission_type"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unsubscribeForNotification",
            "description": "Unsubscribe for notification.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "notificationId",
                    "type": "String",
                    "info": "Id of notification.",
                    "required": true,
                    "vendorSchema": {
                        "name": "notification_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/unsubscribe",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "notification_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteCurrentAvatar",
            "description": "Delete current avatar.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/avatar\/delete",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "uploadAvatar",
            "description": "Upload avatar.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "imageName",
                    "type": "String",
                    "info": "Name of the image.",
                    "required": true
                },
                {
                    "name": "contentType",
                    "type": "String",
                    "info": "Content-Type of the image.Example - image/jpg.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "imageFile",
                    "type": "File",
                    "info": "Image for avatar.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/avatar\/upload",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "listenForNotificationsFromFleep",
            "description": "Use long poll to listen for notifications from Fleep.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "eventHorizon",
                    "type": "Number",
                    "info": "Latest event client has seen.",
                    "required": true,
                    "vendorSchema": {
                        "name": "event_horizon"
                    }
                },
                {
                    "name": "wait",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Set to False if you want to get latest events but not stay waiting if there isn't any.",
                    "required": false
                },
                {
                    "name": "downloadUrl",
                    "type": "String",
                    "info": "url from where to download new binary sent when server decides that client is too old and needs to be upgraded.",
                    "required": false,
                    "vendorSchema": {
                        "name": "download_url"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/listen",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "download_url",
                            "wait",
                            "event_horizon",
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "storingConnectionInformation",
            "description": "Handles long poll server side by storing connection information into connection table by the token.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "eventHorizon",
                    "type": "Number",
                    "info": "Latest event client has seen.",
                    "required": false,
                    "vendorSchema": {
                        "name": "event_horizon"
                    }
                },
                {
                    "name": "wait",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Set to False if you want to get latest events but not stay waiting if there isn't any.",
                    "required": false
                },
                {
                    "name": "pollFlags",
                    "type": "Select",
                    "options": [
                        "skip_hidden",
                        "skip_rest"
                    ],
                    "info": "Can be used to fine tune polls according to client needs. skip_hidden - skip hidden conversations during initial synchronize. skip_rest - skip other conversations and start polling events used for limiting number of conversations loaded into client cache.",
                    "required": false,
                    "vendorSchema": {
                        "name": "poll_flags"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/poll",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "wait",
                            "event_horizon",
                            "ticket",
                            "poll_flags"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeAccount",
            "description": "Use it to initialize some information using token.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "eventHorizon",
                    "type": "Number",
                    "info": "No point to read historic events either server must return good enough guess so that contacts and conversations will be.",
                    "required": false,
                    "vendorSchema": {
                        "name": "event_horizon"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Account's email.",
                    "required": false
                },
                {
                    "name": "displayName",
                    "type": "String",
                    "info": "Account's display name.",
                    "required": false,
                    "vendorSchema": {
                        "name": "display_name"
                    }
                },
                {
                    "name": "accountId",
                    "type": "String",
                    "info": "Account ID.",
                    "required": false,
                    "vendorSchema": {
                        "name": "account_id"
                    }
                },
                {
                    "name": "mkAccountStatus",
                    "type": "Select",
                    "options":["new","active","banned","closed"],
                    "info": "`new` - email has been registered but is goodness is unknown;`active` - user has stored a password and can participate;`banned` - user has been banned for some unacceptable activity;`closed` - user has requested this account to be closed;",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_account_status"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/sync",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "email",
                            "display_name",
                            "ticket",
                            "account_id",
                            "mk_account_status"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getNextBatchOfConversations",
            "description": "Get next or previous batch of conversations.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationIds",
                    "type": "List",
                    "structure": {
                        "name": "conversationId",
                        "type": "String",
                        "info": "Single conversation id."
                    },
                    "info": "List of conversation id's to synchronize.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_ids"
                    }
                },
                {
                    "name": "mkInitMode",
                    "type": "Select",
                    "options": [
                        "ic_header",
                        "ic_tiny",
                        "ic_full"
                    ],
                    "info": "`ic_header` - header only.`ic_tiny` - for minimal.`ic_full` - ready for display.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_init_mode"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/account\/sync_conversations",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "mk_init_mode",
                            "conversation_ids",
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addMembersToConversation",
            "description": "Add member to the conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Add members to the conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email address.",
                    "required": true,
                    "vendorSchema": {
                        "name": "emails"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/add_members\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "mk_init_mode",
                            "from_message_nr",
                            "email",
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "autojoinConversation",
            "description": "Autojoin conversation if not member yet.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationUrlKey",
                    "type": "String",
                    "info": "Either convinfo.conversation_id or last part of convinfo.autojoin_url (KEY).",
                    "required": true,
                    "vendorSchema": {
                        "name": "conv_url_key"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/autojoin",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "conv_url_key",
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "checkPermissions",
            "description": "Check if account has modification rights on the conversation. Same check is done in all conversation services so this here mainly helps with testing and documentation at first.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Check permission conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/check_permissions\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "convertConversation",
            "description": "Convert conversation to new API.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Convert conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/convert_api\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createConversation",
            "description": "Create new conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "topic",
                    "type": "String",
                    "info": "Conversation topic.",
                    "required": false
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email address.",
                    "required": false,
                    "vendorSchema": {
                        "name": "email"
                    }
                },
                {
                    "name": "subject",
                    "type": "String",
                    "info": "Subject for first message.",
                    "required": false
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "Initial message into the conversation.",
                    "required": false
                },
                {
                    "name": "attachments",
                    "type": "List",
                    "structure": {
                        "name": "attachment",
                        "type": "String",
                        "info": "Single attachment."
                    },
                    "info": "List of AttachmentInfos to be added to conversation.",
                    "required": false
                },
                {
                    "name": "isInvite",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Send out invite emails to fresh fleepers",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_invite"
                    }
                },
                {
                    "name": "isAutojoin",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Allow autojoin to the conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_autojoin"
                    }
                },
                {
                    "name": "isDisclose",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Enable\/disable auto disclose.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_disclose"
                    }
                },
                {
                    "name": "fwdConversationId",
                    "type": "String",
                    "info": "Forwarded conversation id (for forwarding html messages).",
                    "required": false,
                    "vendorSchema": {
                        "name": "fwd_conversation_id"
                    }
                },
                {
                    "name": "teamIds",
                    "type": "List",
                    "structure": {
                        "name": "teamId",
                        "type": "String",
                        "info": "Single team id."
                    },
                    "info": "Add teams to conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "team_ids"
                    }
                },
                {
                    "name": "accountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account id."
                    },
                    "info": "List of account ids.",
                    "required": false,
                    "vendorSchema": {
                        "name": "account_ids"
                    }
                },
                {
                    "name": "forkConversationId",
                    "type": "String",
                    "info": "Parent conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "fork_conversation_id"
                    }
                },
                {
                    "name": "isList",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Behaves as mailing list. Set true for group conversations with more than two members as a default.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_list"
                    }
                },
                {
                    "name": "isManaged",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Is this conversation managed conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_managed"
                    }
                },
                {
                    "name": "mkConvType",
                    "type": "Select",
                    "options": [
                        "cct_default",
                        "cct_list",
                        "cct_no_mail"
                    ],
                    "info": "Conversation type.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_conv_type"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/create",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "topic",
                            "emails",
                            "subject",
                            "message",
                            "attachments",
                            "is_invite",
                            "is_autojoin",
                            "is_disclose",
                            "fwd_conversation_id",
                            "team_ids",
                            "account_ids",
                            "fork_conversation_id",
                            "is_list",
                            "is_managed",
                            "mk_conv_type"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createVideoCall",
            "description": "Create a new (video)call.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "provider",
                    "type": "String",
                    "info": "Call service provider (appear.in).",
                    "required": true
                },
                {
                    "name": "roomName",
                    "type": "String",
                    "info": "If not provided, room will have an unique random name.",
                    "required": false,
                    "vendorSchema": {
                        "name": "room_name"
                    }
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Create video call by conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/create_call\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "room_name",
                            "provider"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteConversation",
            "description": "Remove conversation from your conversation list. If you don\u2019t leave conversation before deleting it will still reappear when someone writes in it.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Delete conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/delete\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "discloseConversationHistory",
            "description": "Disclose conversation history to members until given message.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Disclose conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email addresses.",
                    "required": true,
                    "vendorSchema": {
                        "name": "emails"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Disclose up to this message.",
                    "required": false,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/disclose\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "message_nr",
                            "emails"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "discloseAllConversationsHistory",
            "description": "Disclose conversation history to members. All content of last membership is disclosed. ",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Disclose conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email address.",
                    "required": true,
                    "vendorSchema": {
                        "name": "emails"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/disclose_all\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "emails"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "hideConversation",
            "description": "Hide conversation until new messages arrives. Useful for people who want to keep their inbox clear.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Hide conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/hide\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "leaveConversation",
            "description": "Leave the conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Leave conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/leave\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAllConversation",
            "description": "List all conversations for this account. Same conversations may pop up several times due to shifting order caused by incoming messages. Stop calling when you receive empty conversation list.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "synchronizeHorizon",
                    "type": "Number",
                    "info": "Keeps track of conversations loaded set 0 for first call.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sync_horizon"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/list",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "sync_horizon"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "markConversationAsRead",
            "description": "Mark conversation as read regardless of how many unread messages there are. Useful for marking read conversations that you are not planning to read. For example error log after it has rolled up thousands of messages. Returns init conversation stream so the client side conversation will be reset to new read position and all the possibly skipped messages will not get misinterpreted.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Leave conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "mkInitMode",
                    "type": "Select",
                    "options": [
                        "ic_tiny",
                        "ic_full"
                    ],
                    "info": "`ic_tiny` - for minimal.`ic_full` - ready for display.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_init_mode"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/mark_read\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "mk_init_mode"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "sendPokeEven",
            "description": "Send poke event, used for testing synchronize between clients.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Disclose up to this message.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "isBgPoke",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Go through bgworker.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_bg_poke"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/poke\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "is_bg_poke",
                            "message_nr",
                            "from_message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeMembersFromConversation",
            "description": "Remove members from the conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Leave conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email address.",
                    "required": true,
                    "vendorSchema": {
                        "name": "emails"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/remove_members\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "emails",
                            "from_message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setConversationAlerts",
            "description": "Set conversation alerts.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "mkAlertLevel",
                    "type": "Select",
                    "options": [
                        "never",
                        "default"
                    ],
                    "info": "`never` - do not alert for this conversation;`default` - default behaviour.",
                    "required": true,
                    "vendorSchema": {
                        "name": "mk_alert_level"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/set_alerts\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "mk_alert_level",
                            "from_message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "changeConversationTopic",
            "description": "Change conversation topic.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "topic",
                    "type": "String",
                    "info": "Conversation topic.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/set_topic\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "topic",
                            "from_message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getActivity",
            "description": "Show writing pen and\/or pinboard editing status. This works both ways. Any call activates this conversation for this account. So to start receiving activity call with empty parameters.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Edited flow or pinboard message number.",
                    "required": false,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "isWriting",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "true - writing, false - cancel",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_writing"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/show_activity\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "is_writing",
                            "message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "storeConversationHeaderFields",
            "description": "Store conversation header fields. Store only fields that have changed. Call only when cache is fully synced.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "readMessageNumber",
                    "type": "Number",
                    "info": "New read horizon for conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "read_message_nr"
                    }
                },
                {
                    "name": "labels",
                    "type": "List",
                    "structure": {
                        "name": "label",
                        "type": "String",
                        "info": "Single label name."
                    },
                    "info": "User labels for conversation.",
                    "required": false
                },
                {
                    "name": "labelIds",
                    "type": "List",
                    "structure": {
                        "name": "labelId",
                        "type": "String",
                        "info": "Single label id."
                    },
                    "info": "User labels for conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "label_ids"
                    }
                },
                {
                    "name": "topic",
                    "type": "String",
                    "info": "Shared topic for conversation.",
                    "required": true
                },
                {
                    "name": "mkAlertLevel",
                    "type": "Select",
                    "options": [
                        "never",
                        "default"
                    ],
                    "info": "`never` - do not alert for this conversation;`default` - default behaviour.",
                    "required": true,
                    "vendorSchema": {
                        "name": "mk_alert_level"
                    }
                },
                {
                    "name": "snoozeInterval",
                    "type": "String",
                    "info": "For how long to snooze conversation in seconds.",
                    "required": false,
                    "vendorSchema": {
                        "name": "snooze_interval"
                    }
                },
                {
                    "name": "addEmail",
                    "type": "String",
                    "info": "Email to be added (map to fleep accounts if possible).",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_emails"
                    }
                },
                {
                    "name": "removeEmail",
                    "type": "String",
                    "info": "email to be removed (map to fleep accounts if possible).",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_emails"
                    }
                },
                {
                    "name": "discloseEmail",
                    "type": "String",
                    "info": "Disclose conversation to these user.",
                    "required": false,
                    "vendorSchema": {
                        "name": "disclose_emails"
                    }
                },
                {
                    "name": "addAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account id."
                    },
                    "info": "Account ids to be added to the conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_account_ids"
                    }
                },
                {
                    "name": "kickAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account id."
                    },
                    "info": "Account ids to be removed from the conversation with no access to history - only useable with managed conversations.",
                    "required": false,
                    "vendorSchema": {
                        "name": "kick_account_ids"
                    }
                },
                {
                    "name": "removeAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account id."
                    },
                    "info": "Account ids to be removed from the conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_account_ids"
                    }
                },
                {
                    "name": "discloseAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account id."
                    },
                    "info": "Disclose conversation to these users.",
                    "required": false,
                    "vendorSchema": {
                        "name": "disclose_account_ids"
                    }
                },
                {
                    "name": "hideMessageNumber",
                    "type": "Number",
                    "info": "Hide the conversation from this message number.",
                    "required": false,
                    "vendorSchema": {
                        "name": "hide_message_nr"
                    }
                },
                {
                    "name": "isDeleted",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Set to true to delete the conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_deleted"
                    }
                },
                {
                    "name": "isDeletedByAdmin",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Delete by admin (affects all members).",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_deleted_by_admin"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "isAutojoin",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Enable disable auto join.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_autojoin"
                    }
                },
                {
                    "name": "isDisclose",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Enable\/disable auto disclose.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_disclose"
                    }
                },
                {
                    "name": "canPost",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Set to false to leave the conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "can_post"
                    }
                },
                {
                    "name": "isUrlPreviewDisabled",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Don't show url previews for all users.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_url_preview_disabled"
                    }
                },
                {
                    "name": "isList",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Behaves as mailing list.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_list"
                    }
                },
                {
                    "name": "addTeamIds",
                    "type": "List",
                    "structure": {
                        "name": "teamId",
                        "type": "String",
                        "info": "Single team id."
                    },
                    "info": "Add teams to conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_team_ids"
                    }
                },
                {
                    "name": "removeTeamIds",
                    "type": "List",
                    "structure": {
                        "name": "teamId",
                        "type": "String",
                        "info": "Single team id."
                    },
                    "info": "Remove teams from conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_team_ids"
                    }
                },
                {
                    "name": "isManaged",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Is this conversation managed conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_managed"
                    }
                },
                {
                    "name": "addAdmins",
                    "type": "List",
                    "structure": {
                        "name": "adminId",
                        "type": "String",
                        "info": "Single admin id."
                    },
                    "info": "Add conversation admins. Allow settingi non organisation admins as admins for conv.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_admins"
                    }
                },
                {
                    "name": "removeAdmins",
                    "type": "List",
                    "structure": {
                        "name": "adminId",
                        "type": "String",
                        "info": "Single admin id."
                    },
                    "info": "Remove conversation admins.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_admins"
                    }
                },
                {
                    "name": "mkConvType",
                    "type": "Select",
                    "options": [
                        "cct_default",
                        "cct_list",
                        "cct_no_mail"
                    ],
                    "info": "Change conversation email behavior.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_conv_type"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/store\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "read_message_nr",
                            "labels",
                            "label_ids",
                            "topic",
                            "mk_alert_level",
                            "snooze_interval",
                            "add_emails",
                            "remove_emails",
                            "disclose_emails",
                            "add_account_ids",
                            "kick_account_ids",
                            "remove_account_ids",
                            "disclose_account_ids",
                            "hide_message_nr",
                            "is_deleted",
                            "is_deleted_by_admin",
                            "from_message_nr",
                            "is_autojoin",
                            "is_disclose",
                            "can_post",
                            "is_url_preview_disabled",
                            "is_list",
                            "add_team_ids",
                            "remove_team_ids",
                            "is_managed",
                            "add_admins",
                            "remove_admins",
                            "mk_conv_type"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeStateForConversation",
            "description": "Synchronize state for single conversation. If used with default values 5 messages before and after last reported readMessageNumber are returned. Also all conversation state are returned: PinInfo, memberInfo. All optional fields (o) are returned for first synchronize. After that these are included only when there have been changes. Changes are detected from system messages in message flow.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Earliest message number client has received or previous messages are read and returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "mkDirection",
                    "type": "Select",
                    "options": [
                        "ic_header",
                        "ic_tiny",
                        "ic_full",
                        "ic_flow",
                        "ic_end",
                        "ic_backward",
                        "ic_forward",
                        "ic_files",
                        "ic_pinboard",
                        "ic_tasks",
                        "<null>"
                    ],
                    "info": "mkDirection select.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_direction"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/sync\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "mk_direction"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeBackwardForConversation",
            "description": "Synchronize state for single conversation. Used to fetch messages for backward scroll.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Earliest message number client has received or previous messages are read and returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/sync_backward\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "mk_direction"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizePinboardForConversation",
            "description": "Synchronize pinboard for conversation where it was not fully sent with init.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Earliest message number client has received or previous messages are read and returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/sync_pins\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "mk_direction"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeTeamsList",
            "description": "Synchronize teams.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "teamIds",
                    "type": "List",
                    "structure": {
                        "name": "teamId",
                        "type": "String",
                        "info": "Single team id."
                    },
                    "info": "Add teams to conversation.",
                    "required": true,
                    "vendorSchema": {
                        "name": "team_ids"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/sync_teams\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "team_ids"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unhideConversation",
            "description": "Bring conversation out of hiding.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Earliest message number client has received or previous messages are read and returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/unhide\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "mk_direction"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unsubscribeFromConversation",
            "description": "Unsubscribe from conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email address to remove from conversation.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/unsubscribe\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "email"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "copyMessage",
            "description": "Copy message from another chat.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Number of pinned message.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "toConversationId",
                    "type": "String",
                    "info": "Destination conversation.",
                    "required": true,
                    "vendorSchema": {
                        "name": "to_conv_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": true,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/message\/copy\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "to_conv_id",
                            "message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteMessageFromConversation",
            "description": "Delete message from conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Number of pinned message.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "attachmentId",
                    "type": "String",
                    "info": "Delete only given attachment.",
                    "required": false,
                    "vendorSchema": {
                        "name": "attachment_id"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/message\/delete\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "attachment_id",
                            "message_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editConversationMessage",
            "description": "Edit conversation message.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Number of pinned message.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "Message content.",
                    "required": false
                },
                {
                    "name": "attachments",
                    "type": "List",
                    "structure": {
                        "name": "attachment",
                        "type": "JSON",
                        "info": "AttachmentInfo objects"
                    },
                    "info": "List of AttachmentInfo objects to be added.",
                    "required": false
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/message\/edit\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "attachments",
                            "message_nr",
                            "message"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "markMessageAsRead",
            "description": "Set conversation read horizon for this account. Used when client determines that it has shown messages to user for long enough for them to get read or user wants to move read horizon up again.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Client read horizon. Last message number that we have shown to user. We update database and send notifications to other connected clients if it is larger than current value in database.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/message\/mark_read\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "message_nr",
                            "message"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "sendMessage",
            "description": "Send message to flow.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "Message content.",
                    "required": false
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "isRetry",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Client is retrying same message send n'th time. Will fail if fromMessageNumber != lastMessageNumber.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_retry"
                    }
                },
                {
                    "name": "attachments",
                    "type": "List",
                    "structure": {
                        "name": "attachment",
                        "type": "String",
                        "info": "Single attachment."
                    },
                    "info": "List of attachment urls.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/message\/send\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "message_nr",
                            "message",
                            "attachments"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "storeMessage",
            "description": "Store message changes whatever they are. Do changes in local cache and send only changed fields.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "Message content.",
                    "required": false
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "forwardedConversationId",
                    "type": "String",
                    "info": "Forwarded conversation id (for forwarding html messages).",
                    "required": false,
                    "vendorSchema": {
                        "name": "fwd_conversation_id"
                    }
                },
                {
                    "name": "forwardedMessageNumber",
                    "type": "String",
                    "info": "Forwarded message number (for forwarding html messages).",
                    "required": false,
                    "vendorSchema": {
                        "name": "fwd_message_nr"
                    }
                },
                {
                    "name": "isUrlPreviewDisabled",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Disable generating url previews for this message and remove if generated.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_url_preview_disabled"
                    }
                },
                {
                    "name": "isRetry",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Client is retrying same message send n'th time. Will fail if fromMessageNumber != lastMessageNumber.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_retry"
                    }
                },
                {
                    "name": "messageNumber",
                    "type": "Number",
                    "info": "Message number for edits and deletes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "message_nr"
                    }
                },
                {
                    "name": "pinWeight",
                    "type": "Number",
                    "info": "Used for sorting.",
                    "required": false,
                    "vendorSchema": {
                        "name": "pin_weight"
                    }
                },
                {
                    "name": "CrapNetId",
                    "type": "Number",
                    "info": "CrapNet id for message.",
                    "required": false,
                    "vendorSchema": {
                        "name": "client_req_id"
                    }
                },
                {
                    "name": "attachments",
                    "type": "List",
                    "structure": {
                        "name": "attachment",
                        "type": "String",
                        "info": "Single attachment."
                    },
                    "info": "List of attachment urls.",
                    "required": false
                },
                {
                    "name": "assigneeIds",
                    "type": "List",
                    "structure": {
                        "name": "assigneeId",
                        "type": "String",
                        "info": "Single assignee for task or message."
                    },
                    "info": "Assignees for task or message.",
                    "required": false,
                    "vendorSchema": {
                        "name": "assignee_ids"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "type": "Select",
                        "options": [
                            "pin",
                            "is_todo",
                            "is_done",
                            "is_separator",
                            "is_deleted",
                            "is_archived"
                        ],
                        "info": "Single tag."
                    },
                    "info": "List of tags for message;`pin` - pinned message;`is_todo` - task incomplete;`is_done` - done task;`is_separator` - task separator;`is_deleted` - message deleted;`is_archived` - pin or task archived;",
                    "required": false
                },
                {
                    "name": "addReactions",
                    "type": "List",
                    "structure": {
                        "name": "reactionId",
                        "type": "String",
                        "info": "Reaction id to add."
                    },
                    "info": "Reactions to add.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_reactions"
                    }
                },
                {
                    "name": "deleteReactions",
                    "type": "List",
                    "structure": {
                        "name": "reactionId",
                        "type": "String",
                        "info": "Reaction id to remove."
                    },
                    "info": "Reactions to remove.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_reactions"
                    }
                },
                {
                    "name": "subject",
                    "type": "String",
                    "info": "Subject for first message.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/message\/store\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "message_nr",
                            "message",
                            "subject",
                            "attachments",
                            "tags",
                            "pin_weight",
                            "assignee_ids",
                            "client_req_id",
                            "from_message_nr",
                            "is_retry",
                            "is_url_preview_disabled",
                            "fwd_conversation_id",
                            "fwd_message_nr",
                            "add_reactions",
                            "del_reactions"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContentBySearchQuery",
            "description": "Set conversation read horizon for this account. Used when client determines that it has shown messages to user for long enough for them to get read or user wants to move read horizon up again.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Limit search to one conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "needSuggestions",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Request suggestion list.",
                    "required": false,
                    "vendorSchema": {
                        "name": "need_suggestions"
                    }
                },
                {
                    "name": "keywords",
                    "type": "List",
                    "structure": {
                        "name": "keyword",
                        "type": "String",
                        "info": "Keyword for search"
                    },
                    "info": "Query search for content.",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{ }"
                    }
                },
                {
                    "name": "ignoreConversationIds",
                    "type": "List",
                    "structure": {
                        "name": "conversationId",
                        "type": "String",
                        "info": "Conversation Id."
                    },
                    "info": "Client side matches no need to search duplicate matches.",
                    "required": false,
                    "vendorSchema": {
                        "name": "ignore_conversation_ids"
                    }
                },
                {
                    "name": "searchTypes",
                    "type": "List",
                    "structure": {
                        "name": "searchType",
                        "type": "Select",
                        "options": [
                            "topic",
                            "chat",
                            "file",
                            "pin",
                            "task",
                            "subject"
                        ],
                        "info": "Select specific area."
                    },
                    "info": "Do only search in specific areas`topic` - topic search only;`chat` - search in message content; `file` - search in file names; `pin` - search in pins;`task` - search in tasks.`subject` - search in email subjects;",
                    "required": false,
                    "vendorSchema": {
                        "name": "search_types"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/search",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "keywords",
                            "conversation_id",
                            "need_suggestions",
                            "search_types",
                            "ignore_conversation_ids"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "loadIndexDataToCache",
            "description": "Load current user\u2019s index data to cache.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/search\/prepare",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "dropIndexDataToCache",
            "description": "Drop user\u2019s index from cache.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/search\/reset",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSuggestWords",
            "description": "Suggest words.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "keywords",
                    "type": "List",
                    "structure": {
                        "name": "keyword",
                        "type": "String",
                        "info": "Keyword for search."
                    },
                    "info": "Query search for suggest words.",
                    "required": true,
                    "vendorSchema": {
                        "format": "toString:{ }"
                    }
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation id.",
                    "required": false,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/search\/suggest",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "conversation_id",
                            "keywords"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "describeFofContact",
            "description": "Provide description for the contact that will be displayed only to the user.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "contactId",
                    "type": "String",
                    "info": "Contact id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "contact_id"
                    }
                },
                {
                    "name": "contactName",
                    "type": "String",
                    "info": "Description to set.",
                    "required": false,
                    "vendorSchema": {
                        "name": "contact_name"
                    }
                },
                {
                    "name": "phoneNumber",
                    "type": "String",
                    "info": "Set users phone number.",
                    "required": false,
                    "vendorSchema": {
                        "name": "phone_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/describe",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "contact_id",
                            "contact_name",
                            "phone_nr"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "hideContact",
            "description": "Hide contacts from this user\u2019s contactlist.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "contactIds",
                    "type": "List",
                    "structure": {
                        "name": "contactId",
                        "type": "String",
                        "info": "Single contact id to hide."
                    },
                    "info": "List of contacts to hide.",
                    "required": true,
                    "vendorSchema": {
                        "name": "contacts"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/hide",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "contacts"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "importContact",
            "description": "Import contacts into users contactlist. Used for gmail contact import.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "contacts",
                    "type": "Array",
                    "structure": [{
                        "name": "addr_full",
                        "type": "String",
                        "info": "Contact email."
                    },
                        {
                            "name": "addr_descr",
                            "type": "String",
                            "info": "Contact name."
                        }
                    ],
                    "info": "List of ContactImport objects.",
                    "required": true,
                    "vendorSchema": {
                        "name": "contact_list"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/import",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "contact_list"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeContact",
            "description": "Returns profile data for given id. Use it to update local client side cache.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "contactId",
                    "type": "String",
                    "info": "Id of contact to synchronize.",
                    "required": true,
                    "vendorSchema": {
                        "name": "contact_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/sync",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "contact_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeContactActivity",
            "description": "Synchronize last seen time for requested contacts.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "contactIds",
                    "type": "List",
                    "structure": {
                        "name": "contactId",
                        "type": "JSON",
                        "info": "ContactImport objects."
                    },
                    "info": "List of account_ids to synchronize.",
                    "required": true,
                    "vendorSchema": {
                        "name": "contacts"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/sync\/activity",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "contacts"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeAllContact",
            "description": "Returns profile data for all. Use it to update local client side cache.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "searchString",
                    "type": "String",
                    "info": "Returns profile data for given list of id\u2019s. Use it to update local client side cache.",
                    "required": false,
                    "vendorSchema": {
                        "name": "search_str"
                    }
                },
                {
                    "name": "ignoreIds",
                    "type": "List",
                    "structure": {
                        "name": "contactId",
                        "type": "JSON",
                        "info": "Single contact id."
                    },
                    "info": "List of account_ids client already has.",
                    "required": false,
                    "vendorSchema": {
                        "name": "ignore"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/sync\/all",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "search_str",
                            "ignore"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeContactList",
            "description": "Returns profile data for given list of id\u2019s. Use it to update local client side cache.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "contactsIds",
                    "type": "List",
                    "structure": {
                        "name": "contactId",
                        "type": "JSON",
                        "info": "Single contact id."
                    },
                    "info": "List of account_ids to synchronize.",
                    "required": true,
                    "vendorSchema": {
                        "name": "contacts"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/sync\/list",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "contacts"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeContactFromConversation",
            "description": "Remove contact from conversation list dialog suggestions.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "contactId",
                    "type": "String",
                    "info": "Account id to synchronize.",
                    "required": true,
                    "vendorSchema": {
                        "name": "contact_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/contact\/unlist",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "contact_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "uploadFile",
            "description": "Upload one or more files. File upload url-s can be used in message API calls storeMessage and sendMessage as attachments parameter.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "file",
                    "type": "File",
                    "info": "Input field for files.",
                    "required": true
                },
                {
                    "name": "fileName",
                    "type": "String",
                    "info": "Name of the file.",
                    "required": true
                },
                {
                    "name": "contentType",
                    "type": "String",
                    "info": "Content-Type of the file.Example - image/jpg.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/file\/upload\/",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "uploadExternalFile",
            "description": "Add file into Fleep from an external source. Maximum allowed file size is 1GB. Upload request is put into queue and processed by a background job. Upload progress events are sent to the client during the upload process.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "fileUrl",
                    "type": "String",
                    "info": "Input field for files.",
                    "required": true,
                    "vendorSchema": {
                        "name": "file_url"
                    }
                },
                {
                    "name": "fileName",
                    "type": "String",
                    "info": "Name for files.",
                    "required": true,
                    "vendorSchema": {
                        "name": "file_name"
                    }
                },
                {
                    "name": "fileSize",
                    "type": "String",
                    "info": "max 1073741824.",
                    "required": false,
                    "vendorSchema": {
                        "name": "file_size"
                    }
                },
                {
                    "name": "fileOrigin",
                    "type": "String",
                    "info": "From where the file originates (Dropbox, Google Drive, Giphy, ...).",
                    "required": false,
                    "vendorSchema": {
                        "name": "file_origin"
                    }
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Needed, if file is related to a conversation.",
                    "required": false,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "uploadId",
                    "type": "String",
                    "info": "Upload id in client side.",
                    "required": false,
                    "vendorSchema": {
                        "name": "upload_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/file\/upload\/external\/",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "file_url",
                            "file_name",
                            "file_size",
                            "fileOrigin",
                            "conversationId",
                            "uploadId"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addEmailAlias",
            "description": "Register email aliases for given account. Requires confirmation through email. All conversations are transferred under primary account as a result.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email to be registered as alias.",
                    "required": true,
                    "vendorSchema": {
                        "name": "emails"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/alias\/add",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "emails"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "confirmEmailAlias",
            "description": "Confirm that alias email received confirmation code.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "notificationId",
                    "type": "String",
                    "info": "Notification id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "notification_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/alias\/confirm",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "notification_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeEmailAlias",
            "description": "Remove email alias from given account.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "email",
                    "type": "String",
                    "info": "Email to be removed.",
                    "required": true,
                    "vendorSchema": {
                        "name": "emails"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/alias\/remove",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "emails"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeEmailAlias",
            "description": "Fetch all aliases for given account. Used for displaying aliases in UI.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/alias\/sync",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "configureConversationWebhook",
            "description": "Change webhook name and\/or other settings.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "hookKey",
                    "type": "String",
                    "info": "Hook key.",
                    "required": true,
                    "vendorSchema": {
                        "name": "hook_key"
                    }
                },
                {
                    "name": "hookName",
                    "type": "String",
                    "info": "Name for hook.",
                    "required": false,
                    "vendorSchema": {
                        "name": "hook_name"
                    }
                },
                {
                    "name": "outgoingUrl",
                    "type": "String",
                    "info": "URL for outgoing messages only relevant for plain and slack hooks.",
                    "required": false,
                    "vendorSchema": {
                        "name": "outgoing_url"
                    }
                },
                {
                    "name": "outgoingDisabled",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether outgoing URL functionality is disabled or not only relevant for plain and slack hooks.",
                    "required": false,
                    "vendorSchema": {
                        "name": "outgoing_disabled"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https://fleep.io/api/conversation/configure_hook/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "outgoing_disabled",
                            "outgoing_url",
                            "hook_name",
                            "hook_key"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createConversationWebhook",
            "description": "Create webhook for given conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "hookType",
                    "type": "Select",
                    "options": [
                        "bitbucket",
                        "confluence",
                        "bitbucket",
                        "confluence",
                        "github",
                        "gitlab",
                        "ifttt",
                        "jira",
                        "newrelic",
                        "pivotaltracker",
                        "plain",
                        "sameroom",
                        "slack",
                        "trello",
                        "zapier"
                    ],
                    "info": "Select hook type.",
                    "required": false,
                    "vendorSchema": {
                        "name": "mk_hook_type"
                    }
                },
                {
                    "name": "hookName",
                    "type": "String",
                    "info": "Name for hook.",
                    "required": false,
                    "vendorSchema": {
                        "name": "hook_name"
                    }
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                },
                {
                    "name": "outgoingUrl",
                    "type": "String",
                    "info": "URL for outgoing messages only relevant for plain and slack hooks.",
                    "required": false,
                    "vendorSchema": {
                        "name": "outgoing_url"
                    }
                },
                {
                    "name": "outgoingDisabled",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Whether outgoing URL functionality is disabled or not only relevant for plain and slack hooks.",
                    "required": false,
                    "vendorSchema": {
                        "name": "outgoing_disabled"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "externalAccountId",
                    "type": "String",
                    "info": "Id of the external account (see ExternalAccountInfo)only relevant for trello.",
                    "required": false,
                    "vendorSchema": {
                        "name": "external_account_id"
                    }
                },
                {
                    "name": "externalObjectId",
                    "type": "String",
                    "info": "Id of the object in external system that should be hooked only relevant for trello (board id).",
                    "required": false,
                    "vendorSchema": {
                        "name": "external_object_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https://fleep.io/api/conversation/create_hook/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "outgoing_disabled",
                            "outgoing_url",
                            "hook_name",
                            "mk_hook_type",
                            "external_account_id",
                            "external_object_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeConversationWebhook",
            "description": "Remove webhook from conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "hookKey",
                    "type": "String",
                    "info": "Key used as identifier.",
                    "required": true,
                    "vendorSchema": {
                        "name": "hook_key"
                    }
                },
                {
                    "name": "fromMessageNumber",
                    "type": "Number",
                    "info": "Used to return next batch of changes.",
                    "required": false,
                    "vendorSchema": {
                        "name": "from_message_nr"
                    }
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/drop_hook\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "from_message_nr",
                            "hook_key"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getConversationWebhook",
            "description": "Show webhooks in conversation.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "Conversation by id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/conversation\/show_hooks\/{$data['conversation_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "autojoinToTeam",
            "description": "Autojoin team if not member yet. Autojoin url has following format https:\/\/fleep.io\/team\/KEY",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "teamUrlKey",
                    "type": "String",
                    "info": "Either teaminfo.team_id or last part of teaminfo.autojoin_url (KEY).",
                    "required": true,
                    "vendorSchema": {
                        "name": "team_url_key"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/team\/autojoin",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "team_url_key"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "configureTeam",
            "description": "Add or remove members and change team name.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "teamId",
                    "type": "String",
                    "info": "Id of team.",
                    "required": true
                },
                {
                    "name": "teamName",
                    "type": "String",
                    "info": "Team name.",
                    "required": false,
                    "vendorSchema": {
                        "name": "team_name"
                    }
                },
                {
                    "name": "addEmail",
                    "type": "String",
                    "info": "Email to be added to team.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_emails"
                    }
                },
                {
                    "name": "removeEmail",
                    "type": "String",
                    "info": "Email to be removed from team.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_emails"
                    }
                },
                {
                    "name": "addConversations",
                    "type": "List",
                    "structure": {
                        "name": "conversationId",
                        "type": "String",
                        "info": "Single conversation Id."
                    },
                    "info": "List of conversation id's to add.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_conversations"
                    }
                },
                {
                    "name": "removeConversations",
                    "type": "List",
                    "structure": {
                        "name": "conversationId",
                        "type": "String",
                        "info": "Single conversation Id."
                    },
                    "info": "List of conversation id's to remove.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_conversations"
                    }
                },
                {
                    "name": "addAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account Id."
                    },
                    "info": "List of account ids to be added to team.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_account_ids"
                    }
                },
                {
                    "name": "removeAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account Id."
                    },
                    "info": "List of account ids to be removed from team.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_account_ids"
                    }
                },
                {
                    "name": "kickAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account Id."
                    },
                    "info": "List of account ids to be kicked from team , together with confistacion of managed history.",
                    "required": false,
                    "vendorSchema": {
                        "name": "kick_account_ids"
                    }
                },
                {
                    "name": "addAdminIds",
                    "type": "List",
                    "structure": {
                        "name": "adminId",
                        "type": "String",
                        "info": "Single admin Id."
                    },
                    "info": "Add team admins.",
                    "required": false,
                    "vendorSchema": {
                        "name": "add_admin_ids"
                    }
                },
                {
                    "name": "removeAdminIds",
                    "type": "List",
                    "structure": {
                        "name": "adminId",
                        "type": "String",
                        "info": "Single admin Id."
                    },
                    "info": "Remove team admins.",
                    "required": false,
                    "vendorSchema": {
                        "name": "remove_admin_ids"
                    }
                },
                {
                    "name": "isAutojoin",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Is autojoin enabled.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_autojoin"
                    }
                },
                {
                    "name": "isManaged",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Set team managed or not.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_managed"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https://fleep.io/api/team/configure/{$data['teamId']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "team_name",
                            "add_emails",
                            "remove_emails",
                            "add_conversations",
                            "remove_conversations",
                            "add_account_ids",
                            "remove_account_ids",
                            "kick_account_ids",
                            "add_admin_ids",
                            "remove_admin_ids",
                            "is_autojoin",
                            "is_managed"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createTeam",
            "description": "Create team with given members and conversations.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "teamName",
                    "type": "String",
                    "info": "Team name.",
                    "required": true,
                    "vendorSchema": {
                        "name": "team_name"
                    }
                },
                {
                    "name": "addEmail",
                    "type": "String",
                    "info": "Email to be added to team.",
                    "required": false,
                    "vendorSchema": {
                        "name": "emails"
                    }
                },
                {
                    "name": "addConversations",
                    "type": "List",
                    "structure": {
                        "name": "conversationId",
                        "type": "String",
                        "info": "Single conversation Id."
                    },
                    "info": "List of conversation id's to add.",
                    "required": false,
                    "vendorSchema": {
                        "name": "conversations"
                    }
                },
                {
                    "name": "addAccountIds",
                    "type": "List",
                    "structure": {
                        "name": "accountId",
                        "type": "String",
                        "info": "Single account Id."
                    },
                    "info": "List of account ids to be added to team.",
                    "required": false,
                    "vendorSchema": {
                        "name": "account_ids"
                    }
                },
                {
                    "name": "isAutojoin",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Is autojoin enabled.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_autojoin"
                    }
                },
                {
                    "name": "isManaged",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Set team managed or not.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_managed"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/team\/create",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "team_name",
                            "emails",
                            "account_ids",
                            "conversations",
                            "is_autojoin",
                            "is_managed"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeTeam",
            "description": "Remove team.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "teamId",
                    "type": "String",
                    "info": "Team id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "team_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/team\/remove\/{$data['team_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "synchronizeTeam",
            "description": "Synchronize team.",
            "args": [
                {
                    "name": "ticket",
                    "type": "String",
                    "info": "Must be sent as parameter to all subsequent api calls.",
                    "required": true
                },
                {
                    "name": "tokenId",
                    "type": "String",
                    "info": "Token id from loginAccount endpoint.",
                    "required": true
                },
                {
                    "name": "teamId",
                    "type": "String",
                    "info": "Team id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "team_id"
                    }
                },
                {
                    "name": "conversationId",
                    "type": "String",
                    "info": "ConversationId to prove team access.",
                    "required": true,
                    "vendorSchema": {
                        "name": "conversation_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/fleep.io\/api\/team\/sync\/{$data['team_id']}",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "json",
                        "parameters": [
                            "ticket",
                            "conversation_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        }
    ]
}